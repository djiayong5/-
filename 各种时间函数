linux下：
1、gettimeofday（）返回毫秒和年月日：
    struct timeval cur_t; //获取秒
    struct tm* cur_tm; //获取年月日星期
    gettimeofday(&cur_t,NULL);
    cur_tm=localtime(&cur_t.tv_sec);
    printf("Current time is: %sMicro seconds is: %d.\n",asctime(cur_tm),cur_t.tv_usec);
   
2、clock()返回滴答数,最精确为毫秒单位,在标准C/C++中，最小的计时单位是1毫秒：返回从“开启这个程序进程”到“程序中调用clock()函数”时之间的CPU时钟计时单元（clock tick）数
 clock_t t0;
 t0 = clock(); //获取毫秒
 
3、time()返回秒： 返回自 Unix 纪元（January 1 1970 00:00:00 GMT）起的当前时间的秒数的函数
 time_t t0（time_t *t）; //如果t是空指针，直接返回当前时间毫秒。如果t不是空指针，返回当前时间的同时，将返回值赋予t指向的内存空间。 

4、获取微毫秒数gettimeofday（）
#include <sys/time.h>
struct timeval start, end;
gettimeofday( &start, NULL );
sleep(3);
gettimeofday( &end, NULL );
int timeuse = 1000000 * ( end.tv_sec - start.tv_sec ) + end.tv_usec - start.tv_usec;
printf("time: %d us\n", timeuse);

5、 获取毫秒数ftime()
#include <sys/timeb.h>
long long getSystemTime() {
    struct timeb t;
    ftime(&t);
    return 1000 * t.time + t.millitm;
} 
int main() {
    long long start=getSystemTime();
    sleep(3);
    long long end=getSystemTime();
    printf("time: %lld ms\n", end-start);
    return 0;
}

6、获取毫秒数,写出类
//-----mytimecpu.h-----//
class TimerCPU
{
  static const int bits = 10;
public:
  long long beg_clock;
  float freq;
  TimerCPU(float freq_) : freq(freq_) {   // freq = clock frequency in MHz
    beg_clock = getTSC(bits);
  }
  long long getTSC(int bits) {
#ifdef WIN32
    return __rdtsc()/(1LL<<bits);
#else
    unsigned int low, high;
    __asm__(".byte 0x0f, 0x31" :"=a" (low), "=d" (high));
    return ((long long)high<<(32-bits)) | ((long long)low>>bits);
#endif
  }
  float read() {
    long long end_clock = getTSC(bits);
    long long Kcycles = end_clock - beg_clock;
    float time = (float)(1<<bits)*Kcycles/freq/1e3f;
    return time;
  }
};
  
//-----main.cpp-----//
 TimerGPU timer0(0);  
 //.......算法部分.......//
 double totTime0 = timer0.read();
 printf("phash on GPU time 1000 frame : %.2f ms\n", totTime0);
    
    
    
windows下：
1、clock()：同上linux
 
2、time()：同上linux

3、 GetTickCount():返回（retrieve）从操作系统启动所经过（elapsed）的毫秒数
double start = 0.0;
double end = 0.0;
start = GetTickCount();
//.......算法部分.......//
end = GetTickCount();
cout << "gpu缩放所耗费的时间：" << end - start << "\n"
	
4、 获取年月日：
  #include "time.h"
  struct tm *ptr;
  time_t t;
  t=time(NULL);
  ptr=localtime(&t);
  printf(asctime(ptr));//年月日
  printf(“%d ms\n”， ptr->tm_sec);//秒

6、 总结
asctime() 	将时间日期以字符串格式表示
ctime() 	将时间日期以字符串格式表示
gettimeofday() 	获取当前时间
gmtime() 	获取当前时间和日期
localtime() 	获取当前时间和日期并转换为本地时间
mktime() 	将时间转换成经过的秒数
settimeofday() 	设置当前时间戳
time() 	获取当前时间(以秒数表示)
