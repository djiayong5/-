linux下：
1、精确时间：
    struct timeval cur_t; //获取秒
    struct tm* cur_tm; //获取年月日星期
    gettimeofday(&cur_t,NULL);
    cur_tm=localtime(&cur_t.tv_sec);
    printf("Current time is: %sMicro seconds is: %d.\n",asctime(cur_tm),cur_t.tv_usec);
   
2、一般时间：
 time_t t0;
 t0 = clock(); //获取毫秒
 
3、一般时间：
 time_t t0（time_t *t）; //如果t是空指针，直接返回当前时间毫秒。如果t不是空指针，返回当前时间的同时，将返回值赋予t指向的内存空间。 

4、 ftime()
   相关函数：time, ctime, gettimeofday
　　表头文件：#include <sys/timeb.h>
　　函数定义：int ftime(struct timeb *tp);
    struct timeb{
　　time_t time; /* 为1970-01-01至今的秒数*/
　　unsigned short millitm; /* 千分之一秒即毫秒 */
　　short timezonel; /* 为目前时区和Greenwich相差的时间，单位为分钟 */
　　short dstflag; /* 为日光节约时间的修正状态，如果为非0代表启用日光节约时间修正 */
　　};
　　返回值 ：无论成功或失败都返回0
　　范例：
　　#include <sys/timeb.h>
　　main()
　　{
　　struct timeb tp;
　　ftime(&tp);
　　printf("%d\n", tp.time);
　　}


5、写出类
//-----mytimecpu.h-----//
class TimerCPU
{
  static const int bits = 10;
public:
  long long beg_clock;
  float freq;
  TimerCPU(float freq_) : freq(freq_) {   // freq = clock frequency in MHz
    beg_clock = getTSC(bits);
  }
  long long getTSC(int bits) {
#ifdef WIN32
    return __rdtsc()/(1LL<<bits);
#else
    unsigned int low, high;
    __asm__(".byte 0x0f, 0x31" :"=a" (low), "=d" (high));
    return ((long long)high<<(32-bits)) | ((long long)low>>bits);
#endif
  }
  float read() {
    long long end_clock = getTSC(bits);
    long long Kcycles = end_clock - beg_clock;
    float time = (float)(1<<bits)*Kcycles/freq/1e3f;
    return time;
  }
};
  
//-----main.cpp-----//
 TimerGPU timer0(0);  
 //.......算法部分.......//
 double totTime0 = timer0.read();
 printf("phash on GPU time 1000 frame : %.2f ms\n", totTime0);
    
    
    
windows下：
1、一般时间：
 time_t t0;
 t0 = clock(); //获取毫秒
 
2、一般时间：
 time_t t0（time_t *t）; //如果t是空指针，直接返回当前时间毫秒。如果t不是空指针，返回当前时间的同时，将返回值赋予t指向的内存空间。
 
3、 GetTickCount
	double start = 0.0;
	double end = 0.0;
	start = GetTickCount();
  //.......算法部分.......//
  end = GetTickCount();
	cout << "gpu缩放所耗费的时间：" << end - start << "\n"
	
 4、 获取年月日：
  #include "time.h"
  struct tm *ptr;
  time_t t;
  t=time(NULL);
  ptr=localtime(&t);
  printf(asctime(ptr));//年月日
  printf(“%d ms\n”， ptr->tm_sec);//毫秒

6、 总结
asctime() 	将时间日期以字符串格式表示
ctime() 	将时间日期以字符串格式表示
gettimeofday() 	获取当前时间
gmtime() 	获取当前时间和日期
localtime() 	获取当前时间和日期并转换为本地时间
mktime() 	将时间转换成经过的秒数
settimeofday() 	设置当前时间戳
time() 	获取当前时间(以秒数表示)
